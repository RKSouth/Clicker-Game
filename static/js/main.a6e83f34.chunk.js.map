{"version":3,"sources":["components/Wrapper/index.js","components/clickitem.js","components/header.js","App.js","reportWebVitals.js","components/highscoremessage.js","components/nav.js","index.js"],"names":["Wrapper","props","className","children","ClickItem","onClick","src","image","alt","name","clicked","Header","App","state","data","score","topScore","maxScore","array","shuffleData","temp","random","index","Math","floor","handleCorrect","setState","handleIncorrect","forEach","element","handleClick","id","currentClickedItem","filter","x","target","currentClickedIndex","map","e","indexOf","console","log","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HighScore","message","moving","renderMessage","newState","Nav","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","classNameName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e83f34.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\n\r\n\r\nimport \"./style.css\";\r\nconst ClickItem = props => {\r\n  \r\n    return (\r\n        <div className=\"card\">\r\n\r\n   \r\n        \r\n        <img\r\n                  className=\"img-fluid\"\r\n                  onClick={props.onClick}\r\n                  src={props.image}\r\n                  alt={props.name}\r\n                  clicked={props.clicked} />\r\n        \r\n        \r\n      </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default ClickItem\r\n","import React from 'react';\r\n\r\nimport \"./style.css\";\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Clicky Game</h1>\r\n                <p className=\"lead\">Let the games begin!</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\"\nimport ClickItem from \"./components/clickitem\";\nimport Header from \"./components/header\"\nimport data from \"./data.json\";\n\nclass App extends Component {\n  // Setting this.state.data to the data json array\n  state = {\n    data: data,\n    score: 0,\n    topScore: 0,\n    maxScore: 12,\n    array: []\n\n  }\n\n  componentDidMount (){\n    this.setState(\n        {\n            data: this.shuffleData(this.state.data)\n        }\n    )\n}\n// shuffleData = () => {\n//   let index = this.state.data;\n//   for (let i = 0; i < index.length; i++) {\n//     var random = Math.floor(Math.random() * i);\n//     var temp = index[i];\n//     index[i] = index[random];\n//     index[random] = temp;\n//   }\n//   this.setState({ data: index })\n// }\n\n\n// shuffleData= () => {\n//   let i = this.state.data;\n//   for (; i > 0; i--) {\n//     const j = Math.floor(Math.random() * (i + 1));\n//     const temp = this.state.data[i];\n//     this.state.data[i] = this.state.data[j];\n//     this.state.data[j] = temp;\n//   }\n//   console.log(\"shuffle\")\n//   return this.state.data;\n// }\n\nshuffleData = (data) => {\n    let index = 11;\n    let temp;\n    let random;\n    while (index > 0) {\n        random = Math.floor(Math.random()*(index+1))\n        temp = data[index]\n        data[index] = data[random]\n        data[random]= temp\n        index--\n    }\n    return data\n}\n  handleCorrect = () => {\n    \n    if (this.state.score+1 > this.state.topScore) {\n      this.setState({topScore: this.state.topScore+1})\n    }\n    if (this.state.score+1 === this.state.maxScore) {\n      this.setState({score: this.state.score+1})\n    }else{\n      this.setState({score: this.state.score+1})\n    }\n  }\n\n  // handleReset = (currentClickedItem) => {\n  //   //if current score is at max reset score to 0 and topscore to 0\n  //   if (this.state.score+1 === this.state.maxScore) {\n  //     this.setState({score: 0, topScore: 0})\n  //     //reset clicked state for ClickedItem\n  //     const updatedClickedItem = currentClickedItem.map(ch => (true) ? { ...ch, isClicked: false } : ch)\n  //     return updatedClickedItem\n  //   }else{\n  //     return currentClickedItem\n  //   }\n  // }\n\n  handleIncorrect = () => {\n    //incorrect selection made, reset score to 0\n    this.setState({score: 0})\n    //reset clicked state for ClickedItem\n    this.state.data.forEach(element => {\n    element.clicked = \"false\";\n    }); \n  };\n\n\n\n  handleClick = id => {\n    let currentClickedItem = this.state.data.filter(x => x.name === id.target.alt);\n\n\n     \n    let currentClickedIndex = this.state.data.map(function(e) { return e.name; }).indexOf(currentClickedItem[0].name);;\n    const score= 0 ;\n    const topScore = 0;\n\n\n    console.log(\"click\");\n    console.log(currentClickedItem);\n    console.log(currentClickedIndex);\n    console.log(this.state.data)\n    console.log(this.state.data[currentClickedIndex].clicked)\n\n\n\n     if (this.state.data[currentClickedIndex].clicked === \"false\"){\n       console.log(\"I've been clicked for the very first time (like a virgin)\")\n       this.state.data[currentClickedIndex].clicked = \"true\";\n       this.handleCorrect();\n     }\n     else{\n       this.handleIncorrect();\n     }\n\n     this.setState(\n      {\n          data: this.shuffleData(this.state.data)\n      }\n  )\n  };\n\n\n  \n\n  // Map over this.state.data and render a dataCard component for each data object\n  render() {\n \n    return (\n      <Wrapper>\n         <div className=\"container\">\n            <div className=\"text-center row\" >\n \n      \n        {this.state.data.map(data => (\n          <ClickItem\n            id={data.id}\n            key={data.id}\n            name={data.name}\n            image={data.image}\n            clicked={data.clicked}  \n            onClick={this.handleClick}          \n          />\n        ))}\n        </div>\n        </div>\n     </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\n\r\nclass HighScore extends Component {\r\n    state = {\r\n        message: \"\",\r\n        moving: false\r\n    }\r\n    //not built in\r\nrenderMessage =() => {\r\n    switch (this.state.message) {\r\n        case \"correct\":\r\n        return \"you got it right!\"\r\n        break;\r\n        case \"incorrect\":\r\n        return \"you got it wrong!\"\r\n        break;\r\n        default: return \"click an image\"\r\n\r\n    }\r\n}\r\n//built in\r\ncomponentDidUpdate ({ score, topScore }) {\r\n    const newState = {\r\n        moving: true\r\n    }\r\n    if (score ===0 && topScore === 0) {\r\n        newState.message = \"\"\r\n    } else if (score === 0 && topScore > 0) {\r\n        newState.message = \"incorrect\"\r\n    } else {\r\n        newState.message = \"correct\"\r\n    }\r\n//if statement for shaking the screen here -optional\r\n\r\n}\r\n\r\nrender(){\r\n    return(\r\n        //JSX WITH JAVASCRIPT {INSIDE}\r\n        <li className={this.state.moving ? this.state.message : \"\"}>\r\n            {\r\n                this.renderMessage()\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default HighScore","import React from \"react\";\r\nimport HighScore from \"./highscoremessage\"\r\n\r\nimport \"./style.css\";\r\n\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a className=\"navbar-brand\" href=\"/\">Clicker Game</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n\r\n      <li className=\"nav-item active\">\r\n   \r\n            \r\n      <HighScore score={props.score} topScore ={props.topScore}/>\r\n\r\n      </li>\r\n\r\n    </ul>\r\n    <span classNameName=\"navbar-text\">\r\n    score: {props.score} || topScore: {props.topScore}\r\n    </span>\r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n        // <nav className=\"navbar sticky-top navbar-light bg-light\">\r\n        //     <div classNameName=\"nav nav-tabs\">\r\n        //     <ul>\r\n        //         <li classNameName=\"title\" classNameName=\"nav-item\">\r\n        //             <a href = \"/\">\r\n        //               Clicker Game  \r\n        //             </a>\r\n        //         </li >\r\n        //         <HighScore score={props.score} topScore ={props.topScore}/>\r\n        //         <li classNameName=\"nav-item\">\r\n        //             score: {props.score} || topScore: {props.topScore}\r\n        //         </li>\r\n        //     </ul>\r\n        // </div>\r\n        // </nav>\r\n\r\n\r\n        \r\n    )\r\n} \r\n\r\nexport default Nav","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ClickItem from './components/clickitem';\nimport Header from \"./components/header\"\nimport Nav from \"./components/nav\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Nav />\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}