{"version":3,"sources":["components/clickitem.js","components/header.js","components/highscoremessage.js","components/nav.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["ClickItem","props","className","onClick","src","image","alt","name","clicked","Header","HighScore","state","message","moving","renderMessage","score","topScore","newState","this","Component","Nav","href","id","Footer","App","data","maxScore","shuffleData","temp","random","index","Math","floor","handleCorrect","setState","handleIncorrect","forEach","element","handleClick","currentClickedItem","filter","x","target","currentClickedIndex","map","e","indexOf","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.431faa0b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nimport \"./style.css\";\r\nconst ClickItem = props => {\r\n  \r\n    return (\r\n        <div className=\"card\">\r\n\r\n   \r\n        \r\n        <img\r\n                  className=\"img-fluid\"\r\n                  onClick={props.onClick}\r\n                  src={props.image}\r\n                  alt={props.name}\r\n                  clicked={props.clicked} />\r\n        \r\n        \r\n      </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default ClickItem\r\n","import React from 'react';\nimport \"./style.css\";\nconst Header = () => {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Clicky Game</h1>\n                <p className=\"lead\">Let the games begin!</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\r\n\r\nclass HighScore extends Component {\r\n    state = {\r\n        message: \"\",\r\n        moving: false\r\n    }\r\n    //not built in\r\nrenderMessage =() => {\r\n    switch (this.state.message) {\r\n        case \"correct\":\r\n        return \"you got it right!\"\r\n   \r\n        case \"incorrect\":\r\n        return \"you got it wrong!\"\r\n        \r\n        default: return \"Click an image to get started\"\r\n\r\n    }\r\n}\r\n//built in\r\ncomponentDidUpdate ({ score, topScore }) {\r\n    const newState = {\r\n        moving: true\r\n    }\r\n    if (score ===0 && topScore === 0) {\r\n        newState.message = \"\"\r\n    } else if (score === 0 && topScore > 0) {\r\n        newState.message = \"incorrect\"\r\n    } else {\r\n        newState.message = \"correct\"\r\n    }\r\n//if statement for shaking the screen here -optional\r\n\r\n}\r\n\r\nrender(){\r\n    return(\r\n        //JSX WITH JAVASCRIPT {INSIDE}\r\n        <li className={this.state.moving ? this.state.message : \"\"}>\r\n            {\r\n                this.renderMessage()\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default HighScore","import React from \"react\";\r\nimport HighScore from \"./highscoremessage\"\r\nimport \"./style.css\"\r\n\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg \">    \r\n     \r\n  <a className=\"navbar-brand\" href=\"/\">Restart Game</a>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">    \r\n      <HighScore score={props.score} topScore ={props.topScore} message ={props.message}/>\r\n      </li>\r\n    </ul>\r\n    <span className=\"navbar-text\">\r\n    score: {props.score} || topScore: {props.topScore}\r\n    </span>\r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n    )\r\n} \r\n\r\nexport default Nav","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"text-center holder\">\r\n            <footer className=\"footer\">\r\n              Rachael Kelm-Southworth\r\n        </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport ClickItem from \"./components/clickitem\";\nimport Header from \"./components/header\"\nimport Nav from \"./components/nav\"\nimport Footer from './components/footer'\nimport data from \"./data.json\";\n\nclass App extends Component {\n  // Setting this.state.data to the data json array\n  state = {\n    data: data,\n    score: 0,\n    topScore: 0,\n    maxScore: 12,\n    message: \"\",\n    \n\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        data: this.shuffleData(this.state.data)\n      }\n    )\n  }\n\n//mix it up\n  shuffleData = (data) => {\n    let index = 11;\n    let temp;\n    let random;\n    while (index > 0) {\n      random = Math.floor(Math.random() * (index + 1))\n      temp = data[index]\n      data[index] = data[random]\n      data[random] = temp\n      index--\n    }\n    return data\n  }\n  handleCorrect = () => {\n    if (this.state.score + 1 > this.state.topScore) {\n      this.setState({ topScore: this.state.topScore + 1 })\n    }\n    if (this.state.score + 1 === this.state.maxScore) {\n      this.setState({ score: this.state.score + 1 })\n    } else {\n      this.setState({ score: this.state.score + 1 })\n    }\n  }\n\n  handleIncorrect = () => {\n    //incorrect selection made, reset score to 0\n    this.setState({ score: 0 })\n    //reset clicked state for ClickedItem\n    this.state.data.forEach(element => {\n      element.clicked = \"false\";\n    });\n  };\n\n\n\n  handleClick = id => {\n    //how do we find out what item was clicked?\n    //filtering the current items alt tag (name) and setting it to currentitem then comparing the index of the name \n    // to the clicked items names of id numbers ...weird\n    let currentClickedItem = this.state.data.filter(x => x.name === id.target.alt);\n    let currentClickedIndex = this.state.data.map(function (e) { return e.name; }).indexOf(currentClickedItem[0].name);;\n    const score = 0;\n    const topScore = 0;\n\n\n    // console.log(\"click\");\n    // console.log(currentClickedItem);\n    // console.log(currentClickedIndex);\n    // console.log(this.state.data)\n    // console.log(this.state.data[currentClickedIndex].clicked)\n\n//if the data clicked in the current index # had not been clicked then....\n    if (this.state.data[currentClickedIndex].clicked === \"false\") {\n      console.log(\"I've been clicked for the very first time (like a virgin)\")\n      ///set it to true and call the handlecorrect page\n      this.state.data[currentClickedIndex].clicked = \"true\";\n      this.handleCorrect();\n    }\n    else {\n      this.handleIncorrect();\n    }\n\n    this.setState(\n      {\n        data: this.shuffleData(this.state.data)\n      }\n    )\n  };\n\n  // Map over this.state.data and render a dataCard component for each data object\n  render() {\n\n    return (\n      <div>\n      <div>\n        <Nav score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        <Header />\n        <div className=\"container\">\n          <div className=\"text-center row\" >\n\n\n            {this.state.data.map(data => (\n              <ClickItem\n                id={data.id}\n                key={data.id}\n                name={data.name}\n                image={data.image}\n                clicked={data.clicked}\n                onClick={this.handleClick}\n              />\n            ))}\n          </div>\n          <Footer />\n        </div>\n      </div>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}